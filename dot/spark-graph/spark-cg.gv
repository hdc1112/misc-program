digraph G {
  // spark-0.9.0-incubating
  size = "8, 15";
  ranksep=.75;
  //StorageLevel -> Externalizable;
  BlockInfo -> StorageLevel;
  BlockManager -> BlockInfo;
  BlockManager -> ShuffleBlockManager;
  BlockManager -> DiskBlockManager;
  DiskBlockManager -> ShuffleBlockManager;
  BlockManager -> MemoryStore;
  BlockManager -> DiskStore;
  BlockManager -> BlockStore;
  BlockManager -> ConnectionManager;
  BlockManager -> BlockManagerSlaveActor;
  BlockManager -> MetadataCleaner;
  BlockManager -> Serializer;
  BlockManager -> SparkConf;
  BlockManager -> BlockId;
  BlockManager -> BlockManagerId;
  BlockManager -> BlockManagerMaster;
  MemoryStore -> BlockStore;
  BlockManager -> ByteBufferInputStream;
  ByteBufferInputStream -> ByteBuffer;
  BlockManager -> ByteBuffer;
  Serializer -> SerializerInstance;
  SerializerInstance -> SerializationStream;
  SerializerInstance -> DeserializationStream;
  MemoryStore -> BlockManager;
  DiskStore -> BlockManager;
  DiskStore -> DiskBlockManager;
  DiskStore -> BlockStore;
  ShuffleBlockManager -> MetadataCleaner;
  ShuffleBlockManager -> PrimitiveVector;
  ShuffleBlockManager -> FileSegment;
  DiskBlockManager -> PathResolver;
  DiskBlockManager -> ShuffleSender;
  ShuffleSender -> PathResolver;
  ShuffleSender -> FileServer;
  BlockManager -> BlockManagerWorker;
  BlockManagerWorker -> BlockManager;
  BlockManager -> DiskBlockObjectWriter;
  DiskBlockObjectWriter -> BlockObjectWriter;
  BlockManagerSlaveActor -> BlockManager;
  SparkEnv -> BlockManagerMaster;
  BlockManagerMaster -> BlockManagerMasterActor;
  BlockManagerMessages -> ToBlockManagerSlave;
  //ToBlockManagerSlave -> RemoveBlock;
  //ToBlockManagerSlave -> RemoveRdd;
  BlockManagerMessages -> ToBlockManagerMaster;
  //ToBlockManagerMaster -> RegisterBlockManager;
  //ToBlockManagerMaster -> HeartBeat;
  //ToBlockManagerMaster -> UpdateBlockInfo;
  //ToBlockManagerMaster -> GetLocations;
  //ToBlockManagerMaster -> GetLocationsMultipleBlockIds;
  //ToBlockManagerMaster -> GetPeers;
  //ToBlockManagerMaster -> RemoveExecutor;
  //ToBlockManagerMaster -> StopBlockManagerMaster;
  //ToBlockManagerMaster -> GetMemoryStatus;
  //ToBlockManagerMaster -> ExpireDeadHosts;
  //ToBlockManagerMaster -> GetStorageStatus;
  BlockManagerMaster -> BlockManagerMessages;
  BlockManagerMasterActor -> BlockManagerId;
  BlockManagerMasterActor -> BlockManagerMessages;
  BlockManagerMasterActor -> BlockStatus;
  BlockManagerMasterActor -> BlockManagerInfo;
  BlockManagerInfo -> BlockManagerId;
  BlockManagerInfo -> BlockStatus;
  BlockManagerInfo -> BlockId;
  SparkEnv -> BlockManager;
  //NetworkReceiver -> SparkEnv;
  //NetworkReceiver -> BlockManager;
  CacheManager -> BlockManager;
  SparkEnv -> CacheManager;
  SparkEnv -> SerializerManager;
  SparkEnv -> Serializer;
  SparkEnv -> MapOutputTracker;
  SparkEnv -> ShuffleFetcher;
  SparkEnv -> BroadcastManager;
  SparkEnv -> ConnectionManager;
  SparkEnv -> HttpFileServer;
  //SparkEnv -> MetricsSystem;
  SparkEnv -> SparkConf;
  Worker -> ExecutorRunner;
  ExecutorRunner -> ApplicationDescription;
  ExecutorRunner -> CoarseGrainedExecutorBackend;
  CoarseGrainedExecutorBackend -> Executor;
  Executor -> SparkEnv;
  //RDD -> SparkEnv;
  RDD -> CacheManager;
  SparkEnv -> BlockManager;
  Executor -> TaskRunner;
  TaskRunner -> Task;
  ShuffleMapTask -> Task;
  ResultTask -> Task;
  //ShuffleMapTask -> Externalizable;
  //ResultTask -> Externalizable;
  Master -> WorkerInfo;
  Master -> ApplicationInfo;
  WorkerInfo -> ExecutorInfo;
  WorkerInfo -> WorkerState;
  ExecutorInfo -> ApplicationInfo;
  ApplicationInfo -> ApplicationDescription;
  ApplicationInfo -> ExecutorInfo;
  ApplicationInfo -> WorkerInfo;
  ApplicationInfo -> ApplicationState;
  //Master -> MetricsSystem;
  SparkContext -> SparkEnv;
  SparkContext -> DAGScheduler;
  //Source -> MetricRegistry;
  //DAGSchedulerSource -> Source;
  //DAGSchedulerSource -> MetricRegistry;
  SparkContext -> RDD;
  ParallelCollectionRDD -> RDD;
  DAGScheduler -> JobWaiter;
  JobWaiter -> JobListener;
  JobWaiter -> JobResult;
  JobSucceeded -> JobResult;
  JobFailed -> JobResult;
  DAGScheduler -> DAGSchedulerEvent;
  //JobSubmitted -> DAGSchedulerEvent;
  //JobCancelled -> DAGSchedulerEvent;
  //JobGroupCancelled -> DAGSchedulerEvent;
  //AllJobsCancelled -> DAGSchedulerEvent;
  //BeginEvent -> DAGSchedulerEvent;
  //GettingResultEvent -> DAGSchedulerEvent;
  //CompletionEvent -> DAGSchedulerEvent;
  //ExecutorGained -> DAGSchedulerEvent;
  //ExecutorLost -> DAGSchedulerEvent;
  //TaskSetFailed -> DAGSchedulerEvent;
  //ResubmitFailedStages -> DAGSchedulerEvent;
  //StopDAGScheduler -> DAGSchedulerEvent;
  DAGScheduler -> SparkListener;
  WebUI -> SparkListener;
  DAGScheduler -> SparkListenerBus;
  SparkListenerBus -> SparkListener;
  DAGScheduler -> TaskScheduler;
  //DAGScheduler -> MapOutputTrackerMaster;
  //DAGScheduler -> BlockManagerMaster;
  DAGScheduler -> SparkEnv;
  SparkEnv -> MapOutputTrackerMaster;
  TaskSchedulerImpl -> TaskScheduler;
  DAGScheduler -> ActiveJob;
  DAGScheduler -> Stage;
  Stage -> RDD;
  DAGScheduler -> TaskSet;
  TaskSet -> Task;
  TaskSchedulerImpl -> TaskSetManager;
  TaskSetManager -> Schedulable;
  SparkContext -> TaskSchedulerImpl;
  SparkContext -> SparkDeploySchedulerBackend;
  SparkDeploySchedulerBackend -> CoarseGrainedSchedulerBackend;
  CoarseGrainedSchedulerBackend -> SchedulerBackend;
  TaskSchedulerImpl -> SchedulerBackend;
  SparkDeploySchedulerBackend -> ApplicationDescription;
  SparkDeploySchedulerBackend -> AppClient;
  AppClient -> ApplicationDescription;
  AppClient -> AppClientListener;
  //AppClient -> Master;
  //RemoveBlock -> ToBlockManagerSlave;
  //RemoveRdd -> ToBlockManagerSlave;
  //HeartBeat -> ToBlockManagerMaster;
  //UpdateBlockInfo -> ToBlockManagerMaster;
  //GetLocations -> ToBlockManagerMaster;
  //GetLocationsMultipleBlockIds -> ToBlockManagerMaster;
  //GetPeers -> ToBlockManagerMaster;
  //RemoveExecutor_1 -> ToBlockManagerMaster;
  //StopBlockManagerMaster -> ToBlockManagerMaster;
  //GetMemoryStatus -> ToBlockManagerMaster;
  //ExpireDeadHosts -> ToBlockManagerMaster;
  //GetStorageStatus -> ToBlockManagerMaster;
  //RegisterBlockManager -> ToBlockManagerMaster;
  CoarseGrainedSchedulerBackend -> TaskSchedulerImpl;
  BlockManagerSlaveActor -> RemoveBlock;
  BlockManagerSlaveActor -> RemoveRdd;
  CoarseGrainedSchedulerBackend -> CoarseGrainedClusterMessage;
  CoarseGrainedExecutorBackend -> CoarseGrainedClusterMessage;
  //LaunchTask -> CoarseGrainedClusterMessage;
  //KillTask -> CoarseGrainedClusterMessage;
  //RegisteredExecutor -> CoarseGrainedClusterMessage;
  //RegisterExecutorFailed -> CoarseGrainedClusterMessage;
  //RegisterExecutor -> CoarseGrainedClusterMessage;
  //StatusUpdate -> CoarseGrainedClusterMessage;
  //ReviveOffers -> CoarseGrainedClusterMessage;
  //StopDriver -> CoarseGrainedClusterMessage;
  //StopExecutor -> CoarseGrainedClusterMessage;
  //StopExecutors -> CoarseGrainedClusterMessage;
  //RemoveExecutor_2 -> CoarseGrainedClusterMessage;
  CoarseGrainedExecutorBackend -> ExecutorBackend;
  TaskRunner -> ExecutorBackend;
  Master -> DeployMessages;
  Worker -> DeployMessages;
  AppClient -> DeployMessages;
  SparkDeploySchedulerBackend -> AppClientListener;
  TaskSchedulerImpl -> DAGScheduler;
  TaskSchedulerImpl -> Pool;
  Pool -> Schedulable;
  DAGScheduler -> JobResult;
  ShuffleMapTask -> RDD;
  ShuffleMapTask -> TaskContext;
  ResultTask -> RDD;
  ResultTask -> TaskContext;
  ActiveJob -> JobListener;
  TaskSetManager -> TaskSchedulerImpl;
  TaskSetManager -> TaskSet;
  JobWaiter -> DAGScheduler;
  Stage -> ShuffleDependency;
  ShuffleDependency -> Dependency;
  ShuffleDependency -> Partitioner;
  Dependency -> RDD;
  HashPartitioner -> Partitioner;
  RangePartitioner -> Partitioner;
  SerializerManager -> Serializer;
  MapOutputTrackerMaster -> MapOutputTracker;
  MapOutputTracker -> MapOutputTrackerMasterActor;
  MapOutputTrackerMasterActor -> MapOutputTrackerMaster;
  MapOutputTrackerMasterActor -> MapOutputTrackerMessage;
  MapOutputTracker -> MapStatus;
  MapStatus -> BlockManagerId;
  BlockManagerWorker -> ConnectionManager;
  TaskSchedulerImpl -> TaskResultGetter;
  ShuffleMapTask -> MapStatus;
  Stage -> MapStatus;
  ShuffleMapTask -> ShuffleBlockManager;
  ShuffleMapTask -> ShuffleWriterGroup;
  ShuffledRDD -> RDD;
  ShuffledRDD -> ShuffleFetcher;
  BlockStoreShuffleFetcher -> ShuffleFetcher;
  ShuffleFetcher -> TaskContext;
  ShuffleFetcher -> Serializer;
  BlockStoreShuffleFetcher -> BlockManager;
  BlockStoreShuffleFetcher -> MapOutputTracker;
  //ShuffleBlockManager -> ShuffleWriterGroup;
  RDD -> RDDCheckpointData;
  CheckpointRDD -> RDD;
}
